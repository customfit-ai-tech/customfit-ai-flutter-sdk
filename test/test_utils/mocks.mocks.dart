// Mocks generated by Mockito 5.4.6 from annotations
// in customfit_ai_flutter_sdk/test/test_utils/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;

import 'package:customfit_ai_flutter_sdk/src/analytics/event/event_data.dart'
    as _i29;
import 'package:customfit_ai_flutter_sdk/src/analytics/event/event_tracker.dart'
    as _i7;
import 'package:customfit_ai_flutter_sdk/src/analytics/summary/summary_manager.dart'
    as _i6;
import 'package:customfit_ai_flutter_sdk/src/client/cf_client.dart' as _i15;
import 'package:customfit_ai_flutter_sdk/src/client/cf_client_events.dart'
    as _i3;
import 'package:customfit_ai_flutter_sdk/src/client/cf_client_feature_flags.dart'
    as _i2;
import 'package:customfit_ai_flutter_sdk/src/client/cf_client_listeners.dart'
    as _i4;
import 'package:customfit_ai_flutter_sdk/src/client/cf_client_recovery.dart'
    as _i23;
import 'package:customfit_ai_flutter_sdk/src/client/listener/all_flags_listener.dart'
    as _i26;
import 'package:customfit_ai_flutter_sdk/src/client/listener/feature_flag_change_listener.dart'
    as _i25;
import 'package:customfit_ai_flutter_sdk/src/client/managers/config_manager.dart'
    as _i9;
import 'package:customfit_ai_flutter_sdk/src/client/managers/environment_manager.dart'
    as _i11;
import 'package:customfit_ai_flutter_sdk/src/client/managers/listener_manager.dart'
    as _i12;
import 'package:customfit_ai_flutter_sdk/src/client/managers/user_manager.dart'
    as _i10;
import 'package:customfit_ai_flutter_sdk/src/config/core/cf_config.dart'
    as _i30;
import 'package:customfit_ai_flutter_sdk/src/core/error/cf_result.dart' as _i16;
import 'package:customfit_ai_flutter_sdk/src/core/model/cf_user.dart' as _i17;
import 'package:customfit_ai_flutter_sdk/src/core/model/context_type.dart'
    as _i22;
import 'package:customfit_ai_flutter_sdk/src/core/model/evaluation_context.dart'
    as _i21;
import 'package:customfit_ai_flutter_sdk/src/core/session/session_manager.dart'
    as _i20;
import 'package:customfit_ai_flutter_sdk/src/features/feature_flags.dart'
    as _i5;
import 'package:customfit_ai_flutter_sdk/src/features/graceful_degradation.dart'
    as _i24;
import 'package:customfit_ai_flutter_sdk/src/network/config/config_fetcher.dart'
    as _i8;
import 'package:customfit_ai_flutter_sdk/src/network/connection/connection_information.dart'
    as _i28;
import 'package:customfit_ai_flutter_sdk/src/network/connection/connection_manager.dart'
    as _i13;
import 'package:customfit_ai_flutter_sdk/src/network/connection/connection_status.dart'
    as _i27;
import 'package:customfit_ai_flutter_sdk/src/platform/default_background_state_monitor.dart'
    as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCFClientFeatureFlags_0 extends _i1.SmartFake
    implements _i2.CFClientFeatureFlags {
  _FakeCFClientFeatureFlags_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFClientEvents_1 extends _i1.SmartFake
    implements _i3.CFClientEvents {
  _FakeCFClientEvents_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFClientListeners_2 extends _i1.SmartFake
    implements _i4.CFClientListeners {
  _FakeCFClientListeners_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeatureFlags_3 extends _i1.SmartFake implements _i5.FeatureFlags {
  _FakeFeatureFlags_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSummaryManager_4 extends _i1.SmartFake
    implements _i6.SummaryManager {
  _FakeSummaryManager_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventTracker_5 extends _i1.SmartFake implements _i7.EventTracker {
  _FakeEventTracker_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigFetcher_6 extends _i1.SmartFake implements _i8.ConfigFetcher {
  _FakeConfigFetcher_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigManager_7 extends _i1.SmartFake implements _i9.ConfigManager {
  _FakeConfigManager_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserManager_8 extends _i1.SmartFake implements _i10.UserManager {
  _FakeUserManager_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEnvironmentManager_9 extends _i1.SmartFake
    implements _i11.EnvironmentManager {
  _FakeEnvironmentManager_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListenerManager_10 extends _i1.SmartFake
    implements _i12.ListenerManager {
  _FakeListenerManager_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectionManagerImpl_11 extends _i1.SmartFake
    implements _i13.ConnectionManagerImpl {
  _FakeConnectionManagerImpl_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBackgroundStateMonitor_12 extends _i1.SmartFake
    implements _i14.BackgroundStateMonitor {
  _FakeBackgroundStateMonitor_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFClient_13 extends _i1.SmartFake implements _i15.CFClient {
  _FakeCFClient_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFResult_14<T> extends _i1.SmartFake implements _i16.CFResult<T> {
  _FakeCFResult_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFUser_15 extends _i1.SmartFake implements _i17.CFUser {
  _FakeCFUser_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_16<T1> extends _i1.SmartFake implements _i18.Future<T1> {
  _FakeFuture_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CFClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockCFClient extends _i1.Mock implements _i15.CFClient {
  MockCFClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CFClientFeatureFlags get featureFlags => (super.noSuchMethod(
        Invocation.getter(#featureFlags),
        returnValue: _FakeCFClientFeatureFlags_0(
          this,
          Invocation.getter(#featureFlags),
        ),
      ) as _i2.CFClientFeatureFlags);

  @override
  _i3.CFClientEvents get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _FakeCFClientEvents_1(
          this,
          Invocation.getter(#events),
        ),
      ) as _i3.CFClientEvents);

  @override
  _i4.CFClientListeners get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: _FakeCFClientListeners_2(
          this,
          Invocation.getter(#listeners),
        ),
      ) as _i4.CFClientListeners);

  @override
  _i5.FeatureFlags get typed => (super.noSuchMethod(
        Invocation.getter(#typed),
        returnValue: _FakeFeatureFlags_3(
          this,
          Invocation.getter(#typed),
        ),
      ) as _i5.FeatureFlags);

  @override
  bool get isSuccess => (super.noSuchMethod(
        Invocation.getter(#isSuccess),
        returnValue: false,
      ) as bool);

  @override
  _i6.SummaryManager get summaryManager => (super.noSuchMethod(
        Invocation.getter(#summaryManager),
        returnValue: _FakeSummaryManager_4(
          this,
          Invocation.getter(#summaryManager),
        ),
      ) as _i6.SummaryManager);

  @override
  _i7.EventTracker get eventTracker => (super.noSuchMethod(
        Invocation.getter(#eventTracker),
        returnValue: _FakeEventTracker_5(
          this,
          Invocation.getter(#eventTracker),
        ),
      ) as _i7.EventTracker);

  @override
  _i8.ConfigFetcher get configFetcher => (super.noSuchMethod(
        Invocation.getter(#configFetcher),
        returnValue: _FakeConfigFetcher_6(
          this,
          Invocation.getter(#configFetcher),
        ),
      ) as _i8.ConfigFetcher);

  @override
  _i9.ConfigManager get configManager => (super.noSuchMethod(
        Invocation.getter(#configManager),
        returnValue: _FakeConfigManager_7(
          this,
          Invocation.getter(#configManager),
        ),
      ) as _i9.ConfigManager);

  @override
  _i10.UserManager get userManager => (super.noSuchMethod(
        Invocation.getter(#userManager),
        returnValue: _FakeUserManager_8(
          this,
          Invocation.getter(#userManager),
        ),
      ) as _i10.UserManager);

  @override
  _i11.EnvironmentManager get environmentManager => (super.noSuchMethod(
        Invocation.getter(#environmentManager),
        returnValue: _FakeEnvironmentManager_9(
          this,
          Invocation.getter(#environmentManager),
        ),
      ) as _i11.EnvironmentManager);

  @override
  _i12.ListenerManager get listenerManager => (super.noSuchMethod(
        Invocation.getter(#listenerManager),
        returnValue: _FakeListenerManager_10(
          this,
          Invocation.getter(#listenerManager),
        ),
      ) as _i12.ListenerManager);

  @override
  _i13.ConnectionManagerImpl get connectionManager => (super.noSuchMethod(
        Invocation.getter(#connectionManager),
        returnValue: _FakeConnectionManagerImpl_11(
          this,
          Invocation.getter(#connectionManager),
        ),
      ) as _i13.ConnectionManagerImpl);

  @override
  _i14.BackgroundStateMonitor get backgroundStateMonitor => (super.noSuchMethod(
        Invocation.getter(#backgroundStateMonitor),
        returnValue: _FakeBackgroundStateMonitor_12(
          this,
          Invocation.getter(#backgroundStateMonitor),
        ),
      ) as _i14.BackgroundStateMonitor);

  @override
  _i15.CFClient getOrThrow() => (super.noSuchMethod(
        Invocation.method(
          #getOrThrow,
          [],
        ),
        returnValue: _FakeCFClient_13(
          this,
          Invocation.method(
            #getOrThrow,
            [],
          ),
        ),
      ) as _i15.CFClient);

  @override
  void addConfigListener<T>(
    String? key,
    void Function(T)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeConfigListener(String? key) => super.noSuchMethod(
        Invocation.method(
          #removeConfigListener,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearConfigListeners(String? key) => super.noSuchMethod(
        Invocation.method(
          #clearConfigListeners,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addFeatureFlagListener(
    String? flagKey,
    void Function(
      String,
      dynamic,
      dynamic,
    )? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFeatureFlagListener(
    String? flagKey,
    void Function(
      String,
      dynamic,
      dynamic,
    )? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAllFlagsListener(
          void Function(
            Map<String, dynamic>,
            Map<String, dynamic>,
          )? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAllFlagsListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAllFlagsListener(
          void Function(
            Map<String, dynamic>,
            Map<String, dynamic>,
          )? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeAllFlagsListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T getFeatureFlag<T>(
    String? key,
    T? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeatureFlag,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<T>(
          this,
          Invocation.method(
            #getFeatureFlag,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as T);

  @override
  String getString(
    String? key,
    String? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as String);

  @override
  bool getBoolean(
    String? key,
    bool? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBoolean,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  double getNumber(
    String? key,
    double? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumber,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  Map<String, dynamic> getJson(
    String? key,
    Map<String, dynamic>? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getAllFlags() => (super.noSuchMethod(
        Invocation.method(
          #getAllFlags,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool flagExists(String? key) => (super.noSuchMethod(
        Invocation.method(
          #flagExists,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i18.Future<_i16.CFResult<void>> trackEvent(
    String? eventType, {
    Map<String, dynamic>? properties,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvent,
          [eventType],
          {#properties: properties},
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #trackEvent,
            [eventType],
            {#properties: properties},
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i18.Future<_i16.CFResult<void>> trackConversion(
    String? conversionName,
    Map<String, dynamic>? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackConversion,
          [
            conversionName,
            properties,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #trackConversion,
            [
              conversionName,
              properties,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i18.Future<_i16.CFResult<void>> flushEvents() => (super.noSuchMethod(
        Invocation.method(
          #flushEvents,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #flushEvents,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  int getPendingEventCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingEventCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i18.Future<void> shutdown() => (super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<Map<String, dynamic>> fetchAndGetAllFlags(
          {String? lastModified}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndGetAllFlags,
          [],
          {#lastModified: lastModified},
        ),
        returnValue:
            _i18.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i18.Future<Map<String, dynamic>>);

  @override
  void setOffline(bool? offline) => super.noSuchMethod(
        Invocation.method(
          #setOffline,
          [offline],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isOffline() => (super.noSuchMethod(
        Invocation.method(
          #isOffline,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i18.Future<bool> forceRefresh() => (super.noSuchMethod(
        Invocation.method(
          #forceRefresh,
          [],
        ),
        returnValue: _i18.Future<bool>.value(false),
      ) as _i18.Future<bool>);

  @override
  void incrementAppLaunchCount() => super.noSuchMethod(
        Invocation.method(
          #incrementAppLaunchCount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getCurrentSessionId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentSessionId,
          [],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentSessionId,
            [],
          ),
        ),
      ) as String);

  @override
  _i18.Future<String?> forceSessionRotation() => (super.noSuchMethod(
        Invocation.method(
          #forceSessionRotation,
          [],
        ),
        returnValue: _i18.Future<String?>.value(),
      ) as _i18.Future<String?>);

  @override
  _i18.Future<void> updateSessionActivity() => (super.noSuchMethod(
        Invocation.method(
          #updateSessionActivity,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> onUserAuthenticationChange(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUserAuthenticationChange,
          [userId],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  Map<String, dynamic> getSessionStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getSessionStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void addSessionRotationListener(_i20.SessionRotationListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addSessionRotationListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeSessionRotationListener(_i20.SessionRotationListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeSessionRotationListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i16.CFResult<void>> setUser(_i17.CFUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [user],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #setUser,
            [user],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i17.CFUser getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _FakeCFUser_15(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        ),
      ) as _i17.CFUser);

  @override
  _i18.Future<_i16.CFResult<void>> clearUser() => (super.noSuchMethod(
        Invocation.method(
          #clearUser,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #clearUser,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i16.CFResult<void> addUserProperty(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addUserProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addStringProperty(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStringProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addStringProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addNumberProperty(
    String? key,
    num? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNumberProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addNumberProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addBooleanProperty(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBooleanProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addBooleanProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addJsonProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addJsonProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addJsonProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addMapProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMapProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addMapProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addUserProperties(Map<String, dynamic>? properties) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserProperties,
          [properties],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addUserProperties,
            [properties],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  Map<String, dynamic> getUserProperties() => (super.noSuchMethod(
        Invocation.method(
          #getUserProperties,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i16.CFResult<void> removeProperty(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeProperty,
          [key],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #removeProperty,
            [key],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> removeProperties(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeProperties,
          [keys],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #removeProperties,
            [keys],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addPrivateStringProperty(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateStringProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addPrivateStringProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addPrivateNumberProperty(
    String? key,
    num? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateNumberProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addPrivateNumberProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addPrivateBooleanProperty(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateBooleanProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addPrivateBooleanProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addPrivateMapProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateMapProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addPrivateMapProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addPrivateJsonProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateJsonProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addPrivateJsonProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> markPropertyAsPrivate(String? key) => (super.noSuchMethod(
        Invocation.method(
          #markPropertyAsPrivate,
          [key],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #markPropertyAsPrivate,
            [key],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> markPropertiesAsPrivate(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPropertiesAsPrivate,
          [keys],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #markPropertiesAsPrivate,
            [keys],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> addContext(_i21.EvaluationContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContext,
          [context],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #addContext,
            [context],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  _i16.CFResult<void> removeContext(
    _i22.ContextType? type,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeContext,
          [
            type,
            key,
          ],
        ),
        returnValue: _FakeCFResult_14<void>(
          this,
          Invocation.method(
            #removeContext,
            [
              type,
              key,
            ],
          ),
        ),
      ) as _i16.CFResult<void>);

  @override
  List<_i21.EvaluationContext> getContexts() => (super.noSuchMethod(
        Invocation.method(
          #getContexts,
          [],
        ),
        returnValue: <_i21.EvaluationContext>[],
      ) as List<_i21.EvaluationContext>);

  @override
  _i18.Future<_i16.CFResult<_i23.SystemHealthStatus>>
      performSystemHealthCheck() => (super.noSuchMethod(
            Invocation.method(
              #performSystemHealthCheck,
              [],
            ),
            returnValue:
                _i18.Future<_i16.CFResult<_i23.SystemHealthStatus>>.value(
                    _FakeCFResult_14<_i23.SystemHealthStatus>(
              this,
              Invocation.method(
                #performSystemHealthCheck,
                [],
              ),
            )),
          ) as _i18.Future<_i16.CFResult<_i23.SystemHealthStatus>>);

  @override
  _i18.Future<_i16.CFResult<String>> recoverSession({
    String? reason,
    _i18.Future<String?> Function()? authTokenRefreshCallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverSession,
          [],
          {
            #reason: reason,
            #authTokenRefreshCallback: authTokenRefreshCallback,
          },
        ),
        returnValue:
            _i18.Future<_i16.CFResult<String>>.value(_FakeCFResult_14<String>(
          this,
          Invocation.method(
            #recoverSession,
            [],
            {
              #reason: reason,
              #authTokenRefreshCallback: authTokenRefreshCallback,
            },
          ),
        )),
      ) as _i18.Future<_i16.CFResult<String>>);

  @override
  _i18.Future<_i16.CFResult<_i23.EventRecoveryResult>> recoverEvents(
          {int? maxEventsToRetry = 50}) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverEvents,
          [],
          {#maxEventsToRetry: maxEventsToRetry},
        ),
        returnValue: _i18.Future<_i16.CFResult<_i23.EventRecoveryResult>>.value(
            _FakeCFResult_14<_i23.EventRecoveryResult>(
          this,
          Invocation.method(
            #recoverEvents,
            [],
            {#maxEventsToRetry: maxEventsToRetry},
          ),
        )),
      ) as _i18.Future<_i16.CFResult<_i23.EventRecoveryResult>>);

  @override
  _i18.Future<_i16.CFResult<bool>> safeConfigUpdate(
    Map<String, dynamic>? newConfig, {
    Duration? validationTimeout = const Duration(seconds: 30),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #safeConfigUpdate,
          [newConfig],
          {#validationTimeout: validationTimeout},
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #safeConfigUpdate,
            [newConfig],
            {#validationTimeout: validationTimeout},
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<Map<String, dynamic>>> recoverConfiguration() =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverConfiguration,
          [],
        ),
        returnValue: _i18.Future<_i16.CFResult<Map<String, dynamic>>>.value(
            _FakeCFResult_14<Map<String, dynamic>>(
          this,
          Invocation.method(
            #recoverConfiguration,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<Map<String, dynamic>>>);

  @override
  _i18.Future<_i16.CFResult<List<String>>> performAutoRecovery() =>
      (super.noSuchMethod(
        Invocation.method(
          #performAutoRecovery,
          [],
        ),
        returnValue: _i18.Future<_i16.CFResult<List<String>>>.value(
            _FakeCFResult_14<List<String>>(
          this,
          Invocation.method(
            #performAutoRecovery,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<List<String>>>);

  @override
  Map<String, dynamic> getSingletonStats() => (super.noSuchMethod(
        Invocation.method(
          #getSingletonStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getGracefulDegradationMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getGracefulDegradationMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i18.Future<void> clearGracefulDegradationCache() => (super.noSuchMethod(
        Invocation.method(
          #clearGracefulDegradationCache,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> clearFlagCache(String? key) => (super.noSuchMethod(
        Invocation.method(
          #clearFlagCache,
          [key],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<Map<String, dynamic>> getCacheStats() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStats,
          [],
        ),
        returnValue:
            _i18.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i18.Future<Map<String, dynamic>>);

  @override
  _i18.Future<bool> getBooleanWithDegradation(
    String? key,
    bool? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBooleanWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<bool>.value(false),
      ) as _i18.Future<bool>);

  @override
  _i18.Future<String> getStringWithDegradation(
    String? key,
    String? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #getStringWithDegradation,
            [
              key,
              defaultValue,
            ],
            {#strategy: strategy},
          ),
        )),
      ) as _i18.Future<String>);

  @override
  _i18.Future<double> getNumberWithDegradation(
    String? key,
    double? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumberWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<double>.value(0.0),
      ) as _i18.Future<double>);

  @override
  _i18.Future<Map<String, dynamic>> getJsonWithDegradation(
    String? key,
    Map<String, dynamic>? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJsonWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue:
            _i18.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i18.Future<Map<String, dynamic>>);
}

/// A class which mocks [CFClientFeatureFlags].
///
/// See the documentation for Mockito's code generation for more information.
class MockCFClientFeatureFlags extends _i1.Mock
    implements _i2.CFClientFeatureFlags {
  MockCFClientFeatureFlags() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool getBoolean(
    String? key,
    bool? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBoolean,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  String getString(
    String? key,
    String? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as String);

  @override
  double getNumber(
    String? key,
    double? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumber,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  Map<String, dynamic> getJson(
    String? key,
    Map<String, dynamic>? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getAllFlags() => (super.noSuchMethod(
        Invocation.method(
          #getAllFlags,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool flagExists(String? key) => (super.noSuchMethod(
        Invocation.method(
          #flagExists,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i2.CFClientFeatureFlags enableMethodChaining() => (super.noSuchMethod(
        Invocation.method(
          #enableMethodChaining,
          [],
        ),
        returnValue: _FakeCFClientFeatureFlags_0(
          this,
          Invocation.method(
            #enableMethodChaining,
            [],
          ),
        ),
      ) as _i2.CFClientFeatureFlags);

  @override
  T getTypedFlag<T>(
    String? key,
    T? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTypedFlag,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<T>(
          this,
          Invocation.method(
            #getTypedFlag,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as T);

  @override
  T? getFlagOrNull<T>(String? key) => (super.noSuchMethod(Invocation.method(
        #getFlagOrNull,
        [key],
      )) as T?);

  @override
  Map<String, dynamic> getBatchFlags(Map<String, dynamic>? flagRequests) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBatchFlags,
          [flagRequests],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i18.Future<T> evaluateWithFullDegradation<T>({
    required String? key,
    required T? defaultValue,
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #evaluateWithFullDegradation,
          [],
          {
            #key: key,
            #defaultValue: defaultValue,
            #strategy: strategy,
          },
        ),
        returnValue: _i19.ifNotNull(
              _i19.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #evaluateWithFullDegradation,
                  [],
                  {
                    #key: key,
                    #defaultValue: defaultValue,
                    #strategy: strategy,
                  },
                ),
              ),
              (T v) => _i18.Future<T>.value(v),
            ) ??
            _FakeFuture_16<T>(
              this,
              Invocation.method(
                #evaluateWithFullDegradation,
                [],
                {
                  #key: key,
                  #defaultValue: defaultValue,
                  #strategy: strategy,
                },
              ),
            ),
      ) as _i18.Future<T>);

  @override
  Map<String, dynamic> getDegradationMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getDegradationMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i18.Future<void> clearDegradationCache() => (super.noSuchMethod(
        Invocation.method(
          #clearDegradationCache,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> clearFlagCache(String? key) => (super.noSuchMethod(
        Invocation.method(
          #clearFlagCache,
          [key],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<Map<String, dynamic>> getCacheStats() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStats,
          [],
        ),
        returnValue:
            _i18.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i18.Future<Map<String, dynamic>>);

  @override
  _i18.Future<bool> getBooleanWithDegradation(
    String? key,
    bool? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBooleanWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<bool>.value(false),
      ) as _i18.Future<bool>);

  @override
  _i18.Future<String> getStringWithDegradation(
    String? key,
    String? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #getStringWithDegradation,
            [
              key,
              defaultValue,
            ],
            {#strategy: strategy},
          ),
        )),
      ) as _i18.Future<String>);

  @override
  _i18.Future<double> getNumberWithDegradation(
    String? key,
    double? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumberWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue: _i18.Future<double>.value(0.0),
      ) as _i18.Future<double>);

  @override
  _i18.Future<Map<String, dynamic>> getJsonWithDegradation(
    String? key,
    Map<String, dynamic>? defaultValue, {
    _i24.FallbackStrategy? strategy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJsonWithDegradation,
          [
            key,
            defaultValue,
          ],
          {#strategy: strategy},
        ),
        returnValue:
            _i18.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i18.Future<Map<String, dynamic>>);
}

/// A class which mocks [CFClientEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockCFClientEvents extends _i1.Mock implements _i3.CFClientEvents {
  MockCFClientEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i16.CFResult<bool>> trackEvent(String? eventName) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvent,
          [eventName],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #trackEvent,
            [eventName],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<bool>> trackEventWithProperties(
    String? eventName,
    Map<String, dynamic>? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEventWithProperties,
          [
            eventName,
            properties,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #trackEventWithProperties,
            [
              eventName,
              properties,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<bool>> trackConversion(
    String? conversionName,
    Map<String, dynamic>? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackConversion,
          [
            conversionName,
            properties,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #trackConversion,
            [
              conversionName,
              properties,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<bool>> trackUserPropertyChange(
    String? propertyName,
    Map<String, dynamic>? changeDetails,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackUserPropertyChange,
          [
            propertyName,
            changeDetails,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #trackUserPropertyChange,
            [
              propertyName,
              changeDetails,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<bool>> trackLifecycleEvent(
    String? lifecycleEvent,
    Map<String, dynamic>? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackLifecycleEvent,
          [
            lifecycleEvent,
            context,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #trackLifecycleEvent,
            [
              lifecycleEvent,
              context,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<bool>> flushEvents() => (super.noSuchMethod(
        Invocation.method(
          #flushEvents,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #flushEvents,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  int getPendingEventCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingEventCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i3.CFClientEvents enableMethodChaining() => (super.noSuchMethod(
        Invocation.method(
          #enableMethodChaining,
          [],
        ),
        returnValue: _FakeCFClientEvents_1(
          this,
          Invocation.method(
            #enableMethodChaining,
            [],
          ),
        ),
      ) as _i3.CFClientEvents);

  @override
  _i3.CFClientEvents addUserProperty(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFClientEvents_1(
          this,
          Invocation.method(
            #addUserProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFClientEvents);
}

/// A class which mocks [CFClientListeners].
///
/// See the documentation for Mockito's code generation for more information.
class MockCFClientListeners extends _i1.Mock implements _i4.CFClientListeners {
  MockCFClientListeners() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addConfigListener(
    String? key,
    void Function(dynamic)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeConfigListener(
    String? key,
    void Function(dynamic)? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  void addFeatureFlagListener(
    String? flagKey,
    _i25.FeatureFlagChangeListener? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeFeatureFlagListener(
    String? flagKey,
    _i25.FeatureFlagChangeListener? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  void addAllFlagsListener(_i26.AllFlagsListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAllFlagsListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeAllFlagsListener(_i26.AllFlagsListener? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAllFlagsListener,
          [listener],
        ),
        returnValue: false,
      ) as bool);

  @override
  void notifyConfigListeners(
    String? key,
    dynamic newValue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyConfigListeners,
          [
            key,
            newValue,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyFeatureFlagListeners(
    String? flagKey,
    dynamic oldValue,
    dynamic newValue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyFeatureFlagListeners,
          [
            flagKey,
            oldValue,
            newValue,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAllFlagsListeners(
    Map<String, dynamic>? oldFlags,
    Map<String, dynamic>? newFlags,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyAllFlagsListeners,
          [
            oldFlags,
            newFlags,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getConfigListenerCount() => (super.noSuchMethod(
        Invocation.method(
          #getConfigListenerCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getFeatureFlagListenerCount() => (super.noSuchMethod(
        Invocation.method(
          #getFeatureFlagListenerCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getAllFlagsListenerCount() => (super.noSuchMethod(
        Invocation.method(
          #getAllFlagsListenerCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getTotalListenerCount() => (super.noSuchMethod(
        Invocation.method(
          #getTotalListenerCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void clearAllListeners() => super.noSuchMethod(
        Invocation.method(
          #clearAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getListenerStats() => (super.noSuchMethod(
        Invocation.method(
          #getListenerStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void shutdown() => super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ListenerManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockListenerManager extends _i1.Mock implements _i12.ListenerManager {
  MockListenerManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void registerFeatureFlagListener(
    String? flagKey,
    _i25.FeatureFlagChangeListener? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterFeatureFlagListener(
    String? flagKey,
    _i25.FeatureFlagChangeListener? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterFeatureFlagListener,
          [
            flagKey,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerAllFlagsListener(_i26.AllFlagsListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAllFlagsListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllFlagsListener(_i26.AllFlagsListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllFlagsListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addConnectionStatusListener(_i13.ConnectionStatusListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addConnectionStatusListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeConnectionStatusListener(
          _i13.ConnectionStatusListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeConnectionStatusListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyFeatureFlagListeners(
    String? flagKey,
    dynamic oldValue,
    dynamic newValue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyFeatureFlagListeners,
          [
            flagKey,
            oldValue,
            newValue,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAllFlagsListeners(
    Map<String, dynamic>? oldFlags,
    Map<String, dynamic>? newFlags,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyAllFlagsListeners,
          [
            oldFlags,
            newFlags,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyConnectionStatusListeners(
    _i27.ConnectionStatus? status,
    _i28.ConnectionInformation? info,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyConnectionStatusListeners,
          [
            status,
            info,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearAllListeners() => super.noSuchMethod(
        Invocation.method(
          #clearAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventTracker].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventTracker extends _i1.Mock implements _i7.EventTracker {
  MockEventTracker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setupListeners({void Function(_i29.EventData)? onEventTracked}) =>
      super.noSuchMethod(
        Invocation.method(
          #setupListeners,
          [],
          {#onEventTracked: onEventTracked},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i16.CFResult<void>> trackEvent(
    String? eventName,
    Map<String, dynamic>? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvent,
          [
            eventName,
            properties,
          ],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #trackEvent,
            [
              eventName,
              properties,
            ],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i18.Future<_i16.CFResult<void>> trackBatch(List<_i29.EventData>? events) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackBatch,
          [events],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<void>>.value(_FakeCFResult_14<void>(
          this,
          Invocation.method(
            #trackBatch,
            [events],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<void>>);

  @override
  _i18.Future<_i16.CFResult<List<_i29.EventData>>> trackEvents(
          List<_i29.EventData>? events) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvents,
          [events],
        ),
        returnValue: _i18.Future<_i16.CFResult<List<_i29.EventData>>>.value(
            _FakeCFResult_14<List<_i29.EventData>>(
          this,
          Invocation.method(
            #trackEvents,
            [events],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<List<_i29.EventData>>>);

  @override
  _i18.Future<_i16.CFResult<bool>> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #flush,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  void onConnectionStatusChanged(
    _i27.ConnectionStatus? status,
    _i28.ConnectionInformation? info,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onConnectionStatusChanged,
          [
            status,
            info,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEventCallback(_i7.EventCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setEventCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnEventsDroppedCallback(
          void Function(
            int,
            String,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnEventsDroppedCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnBackpressureAppliedCallback(
          void Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnBackpressureAppliedCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAutoFlushEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setAutoFlushEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i16.CFResult<bool>> flushEvents() => (super.noSuchMethod(
        Invocation.method(
          #flushEvents,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #flushEvents,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  int getPendingEventsCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingEventsCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getDroppedEventsCount() => (super.noSuchMethod(
        Invocation.method(
          #getDroppedEventsCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void clearEvents() => super.noSuchMethod(
        Invocation.method(
          #clearEvents,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<void> shutdown() => (super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  Map<String, dynamic> getBackpressureMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getBackpressureMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getHealthMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getHealthMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [ConfigManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigManager extends _i1.Mock implements _i9.ConfigManager {
  MockConfigManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getString(
    String? key,
    String? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as String);

  @override
  bool getBoolean(
    String? key,
    bool? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBoolean,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  num getNumber(
    String? key,
    num? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumber,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: 0,
      ) as num);

  @override
  Map<String, dynamic> getJson(
    String? key,
    Map<String, dynamic>? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  T getConfigValue<T>(
    String? key,
    T? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConfigValue,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i19.dummyValue<T>(
          this,
          Invocation.method(
            #getConfigValue,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as T);

  @override
  void addConfigListener<T>(
    String? key,
    void Function(T)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeConfigListener<T>(
    String? key,
    void Function(T)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearConfigListeners(String? key) => super.noSuchMethod(
        Invocation.method(
          #clearConfigListeners,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getAllFlags() => (super.noSuchMethod(
        Invocation.method(
          #getAllFlags,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic>? getFullFlagConfig(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getFullFlagConfig,
        [key],
      )) as Map<String, dynamic>?);

  @override
  bool hasConfiguration() => (super.noSuchMethod(
        Invocation.method(
          #hasConfiguration,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void shutdown() => super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<bool> refreshConfigs() => (super.noSuchMethod(
        Invocation.method(
          #refreshConfigs,
          [],
        ),
        returnValue: _i18.Future<bool>.value(false),
      ) as _i18.Future<bool>);

  @override
  void dumpConfigMap() => super.noSuchMethod(
        Invocation.method(
          #dumpConfigMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isSdkFunctionalityEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isSdkFunctionalityEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void updateConfigsFromClient(Map<String, dynamic>? newConfigs) =>
      super.noSuchMethod(
        Invocation.method(
          #updateConfigsFromClient,
          [newConfigs],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<void> waitForInitialLoad() => (super.noSuchMethod(
        Invocation.method(
          #waitForInitialLoad,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  void setupListeners({
    required void Function(_i30.CFConfig)? onConfigChange,
    required _i6.SummaryManager? summaryManager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setupListeners,
          [],
          {
            #onConfigChange: onConfigChange,
            #summaryManager: summaryManager,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SummaryManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSummaryManager extends _i1.Mock implements _i6.SummaryManager {
  MockSummaryManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void updateFlushInterval(int? intervalMs) => super.noSuchMethod(
        Invocation.method(
          #updateFlushInterval,
          [intervalMs],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getPendingSummariesCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingSummariesCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void clearSummaries() => super.noSuchMethod(
        Invocation.method(
          #clearSummaries,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i16.CFResult<bool>> pushSummary(Map<String, dynamic>? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushSummary,
          [config],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<bool>>.value(_FakeCFResult_14<bool>(
          this,
          Invocation.method(
            #pushSummary,
            [config],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<bool>>);

  @override
  _i18.Future<_i16.CFResult<int>> flushSummaries() => (super.noSuchMethod(
        Invocation.method(
          #flushSummaries,
          [],
        ),
        returnValue:
            _i18.Future<_i16.CFResult<int>>.value(_FakeCFResult_14<int>(
          this,
          Invocation.method(
            #flushSummaries,
            [],
          ),
        )),
      ) as _i18.Future<_i16.CFResult<int>>);

  @override
  Map<String, bool> getSummaries() => (super.noSuchMethod(
        Invocation.method(
          #getSummaries,
          [],
        ),
        returnValue: <String, bool>{},
      ) as Map<String, bool>);

  @override
  int getQueueSize() => (super.noSuchMethod(
        Invocation.method(
          #getQueueSize,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void shutdown() => super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
