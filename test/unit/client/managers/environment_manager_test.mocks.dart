// Mocks generated by Mockito 5.4.6 from annotations
// in customfit_ai_flutter_sdk/test/unit/client/managers/environment_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:customfit_ai_flutter_sdk/src/client/managers/user_manager.dart'
    as _i7;
import 'package:customfit_ai_flutter_sdk/src/core/error/cf_result.dart' as _i3;
import 'package:customfit_ai_flutter_sdk/src/core/model/application_info.dart'
    as _i11;
import 'package:customfit_ai_flutter_sdk/src/core/model/cf_user.dart' as _i2;
import 'package:customfit_ai_flutter_sdk/src/core/model/context_type.dart'
    as _i9;
import 'package:customfit_ai_flutter_sdk/src/core/model/device_context.dart'
    as _i10;
import 'package:customfit_ai_flutter_sdk/src/core/model/evaluation_context.dart'
    as _i8;
import 'package:customfit_ai_flutter_sdk/src/platform/app_state.dart' as _i5;
import 'package:customfit_ai_flutter_sdk/src/platform/battery_state.dart'
    as _i6;
import 'package:customfit_ai_flutter_sdk/src/platform/default_background_state_monitor.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCFUser_0 extends _i1.SmartFake implements _i2.CFUser {
  _FakeCFUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCFResult_1<T> extends _i1.SmartFake implements _i3.CFResult<T> {
  _FakeCFResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BackgroundStateMonitor].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackgroundStateMonitor extends _i1.Mock
    implements _i4.BackgroundStateMonitor {
  MockBackgroundStateMonitor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addAppStateListener(_i5.AppStateListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAppStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAppStateListener(_i5.AppStateListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeAppStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addBatteryStateListener(_i6.BatteryStateListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addBatteryStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeBatteryStateListener(_i6.BatteryStateListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeBatteryStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.AppState getCurrentAppState() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentAppState,
          [],
        ),
        returnValue: _i5.AppState.active,
      ) as _i5.AppState);

  @override
  _i6.BatteryState getCurrentBatteryState() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentBatteryState,
          [],
        ),
        returnValue: _i6.BatteryState.full,
      ) as _i6.BatteryState);

  @override
  int getCurrentBatteryLevel() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentBatteryLevel,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void shutdown() => super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserManager extends _i1.Mock implements _i7.UserManager {
  MockUserManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CFUser getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _FakeCFUser_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        ),
      ) as _i2.CFUser);

  @override
  _i3.CFResult<void> updateUser(_i2.CFUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> clearUser() => (super.noSuchMethod(
        Invocation.method(
          #clearUser,
          [],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #clearUser,
            [],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addUserProperty(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addUserProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addStringProperty(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStringProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addStringProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addNumberProperty(
    String? key,
    num? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNumberProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addNumberProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addBooleanProperty(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBooleanProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addBooleanProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addJsonProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addJsonProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addJsonProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addUserProperties(Map<String, dynamic>? properties) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserProperties,
          [properties],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addUserProperties,
            [properties],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  Map<String, dynamic> getUserProperties() => (super.noSuchMethod(
        Invocation.method(
          #getUserProperties,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.CFResult<void> addContext(_i8.EvaluationContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContext,
          [context],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addContext,
            [context],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> removeContext(
    _i9.ContextType? type,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeContext,
          [
            type,
            key,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #removeContext,
            [
              type,
              key,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> updateDeviceContext(_i10.DeviceContext? deviceContext) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDeviceContext,
          [deviceContext],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #updateDeviceContext,
            [deviceContext],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> updateApplicationInfo(
          _i11.ApplicationInfo? applicationInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateApplicationInfo,
          [applicationInfo],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #updateApplicationInfo,
            [applicationInfo],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addPrivateStringProperty(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateStringProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addPrivateStringProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addPrivateNumberProperty(
    String? key,
    num? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateNumberProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addPrivateNumberProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addPrivateBooleanProperty(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateBooleanProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addPrivateBooleanProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addPrivateMapProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateMapProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addPrivateMapProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> addPrivateJsonProperty(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrivateJsonProperty,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #addPrivateJsonProperty,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> removeProperty(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeProperty,
          [key],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #removeProperty,
            [key],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> removeProperties(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeProperties,
          [keys],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #removeProperties,
            [keys],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> markPropertyAsPrivate(String? key) => (super.noSuchMethod(
        Invocation.method(
          #markPropertyAsPrivate,
          [key],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #markPropertyAsPrivate,
            [key],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  _i3.CFResult<void> markPropertiesAsPrivate(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPropertiesAsPrivate,
          [keys],
        ),
        returnValue: _FakeCFResult_1<void>(
          this,
          Invocation.method(
            #markPropertiesAsPrivate,
            [keys],
          ),
        ),
      ) as _i3.CFResult<void>);

  @override
  void addUserChangeListener(void Function(_i2.CFUser)? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addUserChangeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUserChangeListener(void Function(_i2.CFUser)? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeUserChangeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setupListeners({required void Function(_i2.CFUser)? onUserChange}) =>
      super.noSuchMethod(
        Invocation.method(
          #setupListeners,
          [],
          {#onUserChange: onUserChange},
        ),
        returnValueForMissingStub: null,
      );
}
