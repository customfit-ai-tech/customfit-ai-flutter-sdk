// Mocks generated by Mockito 5.4.6 from annotations
// in customfit_ai_flutter_sdk/test/unit/client/cf_client_recovery_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:customfit_ai_flutter_sdk/src/analytics/event/event_data.dart'
    as _i7;
import 'package:customfit_ai_flutter_sdk/src/analytics/event/event_tracker.dart'
    as _i6;
import 'package:customfit_ai_flutter_sdk/src/analytics/summary/summary_manager.dart'
    as _i12;
import 'package:customfit_ai_flutter_sdk/src/client/managers/config_manager.dart'
    as _i10;
import 'package:customfit_ai_flutter_sdk/src/config/core/cf_config.dart'
    as _i11;
import 'package:customfit_ai_flutter_sdk/src/core/error/cf_result.dart' as _i2;
import 'package:customfit_ai_flutter_sdk/src/core/session/session_manager.dart'
    as _i3;
import 'package:customfit_ai_flutter_sdk/src/network/connection/connection_information.dart'
    as _i9;
import 'package:customfit_ai_flutter_sdk/src/network/connection/connection_status.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCFResult_0<T> extends _i1.SmartFake implements _i2.CFResult<T> {
  _FakeCFResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SessionManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionManager extends _i1.Mock implements _i3.SessionManager {
  MockSessionManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getCurrentSessionId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentSessionId,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentSessionId,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<void> updateActivity() => (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onAppBackground() => (super.noSuchMethod(
        Invocation.method(
          #onAppBackground,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onAppForeground() => (super.noSuchMethod(
        Invocation.method(
          #onAppForeground,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onAuthenticationChange(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAuthenticationChange,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onNetworkChange() => (super.noSuchMethod(
        Invocation.method(
          #onNetworkChange,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> forceRotation() => (super.noSuchMethod(
        Invocation.method(
          #forceRotation,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #forceRotation,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  void addListener(_i3.SessionRotationListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.SessionRotationListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getSessionStats() => (super.noSuchMethod(
        Invocation.method(
          #getSessionStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [EventTracker].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventTracker extends _i1.Mock implements _i6.EventTracker {
  MockEventTracker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setupListeners({void Function(_i7.EventData)? onEventTracked}) =>
      super.noSuchMethod(
        Invocation.method(
          #setupListeners,
          [],
          {#onEventTracked: onEventTracked},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.CFResult<void>> trackEvent(
    String? eventName,
    Map<String, dynamic>? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvent,
          [
            eventName,
            properties,
          ],
        ),
        returnValue: _i5.Future<_i2.CFResult<void>>.value(_FakeCFResult_0<void>(
          this,
          Invocation.method(
            #trackEvent,
            [
              eventName,
              properties,
            ],
          ),
        )),
      ) as _i5.Future<_i2.CFResult<void>>);

  @override
  _i5.Future<_i2.CFResult<void>> trackBatch(List<_i7.EventData>? events) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackBatch,
          [events],
        ),
        returnValue: _i5.Future<_i2.CFResult<void>>.value(_FakeCFResult_0<void>(
          this,
          Invocation.method(
            #trackBatch,
            [events],
          ),
        )),
      ) as _i5.Future<_i2.CFResult<void>>);

  @override
  _i5.Future<_i2.CFResult<List<_i7.EventData>>> trackEvents(
          List<_i7.EventData>? events) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackEvents,
          [events],
        ),
        returnValue: _i5.Future<_i2.CFResult<List<_i7.EventData>>>.value(
            _FakeCFResult_0<List<_i7.EventData>>(
          this,
          Invocation.method(
            #trackEvents,
            [events],
          ),
        )),
      ) as _i5.Future<_i2.CFResult<List<_i7.EventData>>>);

  @override
  _i5.Future<_i2.CFResult<bool>> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue: _i5.Future<_i2.CFResult<bool>>.value(_FakeCFResult_0<bool>(
          this,
          Invocation.method(
            #flush,
            [],
          ),
        )),
      ) as _i5.Future<_i2.CFResult<bool>>);

  @override
  void onConnectionStatusChanged(
    _i8.ConnectionStatus? status,
    _i9.ConnectionInformation? info,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onConnectionStatusChanged,
          [
            status,
            info,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEventCallback(_i6.EventCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setEventCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnEventsDroppedCallback(
          void Function(
            int,
            String,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnEventsDroppedCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnBackpressureAppliedCallback(
          void Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnBackpressureAppliedCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAutoFlushEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setAutoFlushEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.CFResult<bool>> flushEvents() => (super.noSuchMethod(
        Invocation.method(
          #flushEvents,
          [],
        ),
        returnValue: _i5.Future<_i2.CFResult<bool>>.value(_FakeCFResult_0<bool>(
          this,
          Invocation.method(
            #flushEvents,
            [],
          ),
        )),
      ) as _i5.Future<_i2.CFResult<bool>>);

  @override
  int getPendingEventsCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingEventsCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getDroppedEventsCount() => (super.noSuchMethod(
        Invocation.method(
          #getDroppedEventsCount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void clearEvents() => super.noSuchMethod(
        Invocation.method(
          #clearEvents,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> shutdown() => (super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  Map<String, dynamic> getBackpressureMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getBackpressureMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getHealthMetrics() => (super.noSuchMethod(
        Invocation.method(
          #getHealthMetrics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [ConfigManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigManager extends _i1.Mock implements _i10.ConfigManager {
  MockConfigManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getString(
    String? key,
    String? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as String);

  @override
  bool getBoolean(
    String? key,
    bool? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBoolean,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  num getNumber(
    String? key,
    num? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNumber,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: 0,
      ) as num);

  @override
  Map<String, dynamic> getJson(
    String? key,
    Map<String, dynamic>? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  T getConfigValue<T>(
    String? key,
    T? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConfigValue,
          [
            key,
            defaultValue,
          ],
        ),
        returnValue: _i4.dummyValue<T>(
          this,
          Invocation.method(
            #getConfigValue,
            [
              key,
              defaultValue,
            ],
          ),
        ),
      ) as T);

  @override
  void addConfigListener<T>(
    String? key,
    void Function(T)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeConfigListener<T>(
    String? key,
    void Function(T)? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeConfigListener,
          [
            key,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearConfigListeners(String? key) => super.noSuchMethod(
        Invocation.method(
          #clearConfigListeners,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getAllFlags() => (super.noSuchMethod(
        Invocation.method(
          #getAllFlags,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic>? getFullFlagConfig(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getFullFlagConfig,
        [key],
      )) as Map<String, dynamic>?);

  @override
  bool hasConfiguration() => (super.noSuchMethod(
        Invocation.method(
          #hasConfiguration,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void shutdown() => super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> refreshConfigs() => (super.noSuchMethod(
        Invocation.method(
          #refreshConfigs,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  void dumpConfigMap() => super.noSuchMethod(
        Invocation.method(
          #dumpConfigMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isSdkFunctionalityEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isSdkFunctionalityEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void updateConfigsFromClient(Map<String, dynamic>? newConfigs) =>
      super.noSuchMethod(
        Invocation.method(
          #updateConfigsFromClient,
          [newConfigs],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> waitForInitialLoad() => (super.noSuchMethod(
        Invocation.method(
          #waitForInitialLoad,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void setupListeners({
    required void Function(_i11.CFConfig)? onConfigChange,
    required _i12.SummaryManager? summaryManager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setupListeners,
          [],
          {
            #onConfigChange: onConfigChange,
            #summaryManager: summaryManager,
          },
        ),
        returnValueForMissingStub: null,
      );
}
