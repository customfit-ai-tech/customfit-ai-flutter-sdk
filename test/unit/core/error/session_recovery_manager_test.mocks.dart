// Mocks generated by Mockito 5.4.6 from annotations
// in customfit_ai_flutter_sdk/test/unit/core/error/session_recovery_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:customfit_ai_flutter_sdk/src/core/session/session_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SessionManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionManager extends _i1.Mock implements _i2.SessionManager {
  MockSessionManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getCurrentSessionId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentSessionId,
          [],
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentSessionId,
            [],
          ),
        ),
      ) as String);

  @override
  _i4.Future<void> updateActivity() => (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> onAppBackground() => (super.noSuchMethod(
        Invocation.method(
          #onAppBackground,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> onAppForeground() => (super.noSuchMethod(
        Invocation.method(
          #onAppForeground,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> onAuthenticationChange(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAuthenticationChange,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> onNetworkChange() => (super.noSuchMethod(
        Invocation.method(
          #onNetworkChange,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> forceRotation() => (super.noSuchMethod(
        Invocation.method(
          #forceRotation,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #forceRotation,
            [],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  void addListener(_i2.SessionRotationListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i2.SessionRotationListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getSessionStats() => (super.noSuchMethod(
        Invocation.method(
          #getSessionStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
